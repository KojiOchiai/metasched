from maholocon.maholo_api import schemas

import re
from itertools import product


def expand_string(pattern):
    """
    Expands a string pattern containing range specifications of the format `{min..max}` 
    to produce all possible combinations.

    Parameters:
    pattern (str): A string containing one or more range specifications in the form `{min..max}`.

    Returns:
    list: A list of strings with all possible combinations generated by expanding each range.

    Example:
    >>> expand_string("hoge/p{1..3}#{4..5}-{7..8}")
    ['hoge/p1#4-7', 'hoge/p1#4-8', 'hoge/p1#5-7', 'hoge/p1#5-8',
     'hoge/p2#4-7', 'hoge/p2#4-8', 'hoge/p2#5-7', 'hoge/p2#5-8',
     'hoge/p3#4-7', 'hoge/p3#4-8', 'hoge/p3#5-7', 'hoge/p3#5-8']
    """
    
    # Use regex to find all range specifications within curly braces
    matches = re.findall(r'\{(\d+)\.\.(\d+)\}', pattern)
    
    # Generate range expansions for each match found
    expansions = []
    for start, end in matches:
        start, end = int(start), int(end)
        expansions.append([str(i) for i in range(start, end + 1)])
    
    # Create all combinations of expanded ranges
    result = []
    for combo in product(*expansions):
        temp_pattern = pattern
        for value in combo:
            temp_pattern = re.sub(r'\{\d+\.\.\d+\}', value, temp_pattern, count=1)
        result.append(temp_pattern)
    
    return result


class ProtocolModel:
    @property
    def protocols(self) -> list[str]:
        return []
    
    async def hook(self, status: schemas.BioPortalStatus) -> None:
        pass
